.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test2::Util::Ref 3"
.TH Test2::Util::Ref 3 2023-10-25 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Test2::Util::Ref \- Tools for inspecting or manipulating references.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
These are used by Test2::Tools to inspect, render, or manipulate references.
.SH EXPORTS
.IX Header "EXPORTS"
All exports are optional. You must specify subs to import.
.ie n .IP "$type = rtype($ref)" 4
.el .IP "\f(CW$type\fR = rtype($ref)" 4
.IX Item "$type = rtype($ref)"
A normalization between \f(CWScalar::Util::reftype()\fR and \f(CWref()\fR.
.Sp
Always returns a string.
.Sp
Returns \f(CW\*(AqREGEXP\*(Aq\fR for regex types
.Sp
Returns \f(CW\*(Aq\*(Aq\fR for non-refs
.Sp
Otherwise returns what \f(CWScalar::Util::reftype()\fR returns.
.ie n .IP "$addr_str = render_ref($ref)" 4
.el .IP "\f(CW$addr_str\fR = render_ref($ref)" 4
.IX Item "$addr_str = render_ref($ref)"
Always returns a string. For unblessed references this returns something like
\&\f(CW"SCALAR(0x...)"\fR. For blessed references it returns
\&\f(CW"My::Thing=SCALAR(0x...)"\fR. The only difference between this and \f(CW$add_str =
"$thing"\fR is that it ignores any overloading to ensure it is always the ref
address.
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Test2\-Suite can be found at
\&\fIhttps://github.com/Test\-More/Test2\-Suite/\fR.
.SH MAINTAINERS
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH AUTHORS
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.IP "Kent Fredric <kentnl@cpan.org>" 4
.IX Item "Kent Fredric <kentnl@cpan.org>"
.PD
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2018 Chad Granum <exodist@cpan.org>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
