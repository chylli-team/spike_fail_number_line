.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Yath::Options::PreCommand 3"
.TH App::Yath::Options::PreCommand 3 2023-10-03 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Yath::Options::PreCommand \- Options for yath before command is specified.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This is qhere many pe-commnd options are defined.
.SH "PROVIDED OPTIONS"
.IX Header "PROVIDED OPTIONS"
.SS "YATH OPTIONS (PRE-COMMAND)"
.IX Subsection "YATH OPTIONS (PRE-COMMAND)"
\fIDeveloper\fR
.IX Subsection "Developer"
.IP \-\-dev\-lib 4
.IX Item "--dev-lib"
.PD 0
.IP \-\-dev\-lib=lib 4
.IX Item "--dev-lib=lib"
.IP \-D 4
.IX Item "-D"
.IP \-D=lib 4
.IX Item "-D=lib"
.IP \-Dlib 4
.IX Item "-Dlib"
.IP \-\-no\-dev\-lib 4
.IX Item "--no-dev-lib"
.PD
Add paths to \f(CW@INC\fR before loading ANYTHING. This is what you use if you are developing yath or yath plugins to make sure the yath script finds the local code instead of the installed versions of the same code. You can provide an argument (\-Dfoo) to provide a custom path, or you can just use \-D without and arg to add lib, blib/lib and blib/arch.
.Sp
Can be specified multiple times
.PP
\fIEnvironment\fR
.IX Subsection "Environment"
.IP "\-\-persist\-dir ARG" 4
.IX Item "--persist-dir ARG"
.PD 0
.IP \-\-persist\-dir=ARG 4
.IX Item "--persist-dir=ARG"
.IP \-\-no\-persist\-dir 4
.IX Item "--no-persist-dir"
.PD
Where to find persistence files.
.IP "\-\-persist\-file ARG" 4
.IX Item "--persist-file ARG"
.PD 0
.IP \-\-persist\-file=ARG 4
.IX Item "--persist-file=ARG"
.IP "\-\-pfile ARG" 4
.IX Item "--pfile ARG"
.IP \-\-pfile=ARG 4
.IX Item "--pfile=ARG"
.IP \-\-no\-persist\-file 4
.IX Item "--no-persist-file"
.PD
Where to find the persistence file. The default is /{system\-tempdir}/project\-yath\-persist.json. If no project is specified then it will fall back to the current directory. If the current directory is not writable it will default to /tmp/yath\-persist.json which limits you to one persistent runner on your system.
.IP "\-\-project ARG" 4
.IX Item "--project ARG"
.PD 0
.IP \-\-project=ARG 4
.IX Item "--project=ARG"
.IP "\-\-project\-name ARG" 4
.IX Item "--project-name ARG"
.IP \-\-project\-name=ARG 4
.IX Item "--project-name=ARG"
.IP \-\-no\-project 4
.IX Item "--no-project"
.PD
This lets you provide a label for your current project/codebase. This is best used in a .yath.rc file. This is necessary for a persistent runner.
.PP
\fIPlugins\fR
.IX Subsection "Plugins"
.IP \-\-no\-scan\-plugins 4
.IX Item "--no-scan-plugins"
.PD 0
.IP \-\-no\-no\-scan\-plugins 4
.IX Item "--no-no-scan-plugins"
.PD
Normally yath scans for and loads all App::Yath::Plugin::* modules in order to bring in command-line options they may provide. This flag will disable that. This is useful if you have a naughty plugin that is loading other modules when it should not.
.IP "\-\-plugins PLUGIN" 4
.IX Item "--plugins PLUGIN"
.PD 0
.IP "\-\-plugins +App::Yath::Plugin::PLUGIN" 4
.IX Item "--plugins +App::Yath::Plugin::PLUGIN"
.IP "\-\-plugins PLUGIN=arg1,arg2,..." 4
.IX Item "--plugins PLUGIN=arg1,arg2,..."
.IP "\-\-plugin PLUGIN" 4
.IX Item "--plugin PLUGIN"
.IP "\-\-plugin +App::Yath::Plugin::PLUGIN" 4
.IX Item "--plugin +App::Yath::Plugin::PLUGIN"
.IP "\-\-plugin PLUGIN=arg1,arg2,..." 4
.IX Item "--plugin PLUGIN=arg1,arg2,..."
.IP \-pPLUGIN 4
.IX Item "-pPLUGIN"
.IP \-\-no\-plugins 4
.IX Item "--no-plugins"
.PD
Load a yath plugin.
.Sp
Can be specified multiple times
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH MAINTAINERS
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH AUTHORS
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
