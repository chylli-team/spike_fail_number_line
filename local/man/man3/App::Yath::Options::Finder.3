.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Yath::Options::Finder 3"
.TH App::Yath::Options::Finder 3 2023-10-03 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Yath::Options::Finder \- Finder options for Yath.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This is where the command line options for discovering test files are defined.
.SH "PROVIDED OPTIONS"
.IX Header "PROVIDED OPTIONS"
.SS "YATH OPTIONS (PRE-COMMAND)"
.IX Subsection "YATH OPTIONS (PRE-COMMAND)"
\fIFinder Options\fR
.IX Subsection "Finder Options"
.IP "\-\-finder MyFinder" 4
.IX Item "--finder MyFinder"
.PD 0
.IP "\-\-finder +Test2::Harness::Finder::MyFinder" 4
.IX Item "--finder +Test2::Harness::Finder::MyFinder"
.IP \-\-no\-finder 4
.IX Item "--no-finder"
.PD
Specify what Finder subclass to use when searching for files/processing the file list. Use the "+" prefix to specify a fully qualified namespace, otherwise Test2::Harness::Finder::XXX namespace is assumed.
.SS "COMMAND OPTIONS"
.IX Subsection "COMMAND OPTIONS"
\fIFinder Options\fR
.IX Subsection "Finder Options"
.IP "\-\-changed path/to/file" 4
.IX Item "--changed path/to/file"
.PD 0
.IP \-\-no\-changed 4
.IX Item "--no-changed"
.PD
Specify one or more files as having been changed.
.Sp
Can be specified multiple times
.IP \-\-changed\-only 4
.IX Item "--changed-only"
.PD 0
.IP \-\-no\-changed\-only 4
.IX Item "--no-changed-only"
.PD
Only search for tests for changed files (Requires a coverage data source, also requires a list of changes either from the \-\-changed option, or a plugin that implements \fBchanged_files()\fR or \fBchanged_diff()\fR)
.IP "\-\-changes\-diff path/to/diff.diff" 4
.IX Item "--changes-diff path/to/diff.diff"
.PD 0
.IP \-\-no\-changes\-diff 4
.IX Item "--no-changes-diff"
.PD
Path to a diff file that should be used to find changed files for use with \-\-changed\-only. This must be in the same format as `git diff \-W \-\-minimal \-U1000000`
.IP "\-\-changes\-exclude\-file path/to/file" 4
.IX Item "--changes-exclude-file path/to/file"
.PD 0
.IP \-\-no\-changes\-exclude\-file 4
.IX Item "--no-changes-exclude-file"
.PD
Specify one or more files to ignore when looking at changes
.Sp
Can be specified multiple times
.IP \-\-changes\-exclude\-loads 4
.IX Item "--changes-exclude-loads"
.PD 0
.IP \-\-no\-changes\-exclude\-loads 4
.IX Item "--no-changes-exclude-loads"
.PD
Exclude coverage tests which only load changed files, but never call code from them. (default: off)
.IP \-\-changes\-exclude\-nonsub 4
.IX Item "--changes-exclude-nonsub"
.PD 0
.IP \-\-no\-changes\-exclude\-nonsub 4
.IX Item "--no-changes-exclude-nonsub"
.PD
Exclude changes outside of subroutines (perl files only) (default: off)
.IP \-\-changes\-exclude\-opens 4
.IX Item "--changes-exclude-opens"
.PD 0
.IP \-\-no\-changes\-exclude\-opens 4
.IX Item "--no-changes-exclude-opens"
.PD
Exclude coverage tests which only \fBopen()\fR changed files, but never call code from them. (default: off)
.IP "\-\-changes\-exclude\-pattern '(apple|pear|orange)'" 4
.IX Item "--changes-exclude-pattern '(apple|pear|orange)'"
.PD 0
.IP \-\-no\-changes\-exclude\-pattern 4
.IX Item "--no-changes-exclude-pattern"
.PD
Ignore files matching this pattern when looking for changes. Your pattern will be inserted unmodified into a `$file =~ m/$pattern/` check.
.Sp
Can be specified multiple times
.IP "\-\-changes\-filter\-file path/to/file" 4
.IX Item "--changes-filter-file path/to/file"
.PD 0
.IP \-\-no\-changes\-filter\-file 4
.IX Item "--no-changes-filter-file"
.PD
Specify one or more files to check for changes. Changes to other files will be ignored
.Sp
Can be specified multiple times
.IP "\-\-changes\-filter\-pattern '(apple|pear|orange)'" 4
.IX Item "--changes-filter-pattern '(apple|pear|orange)'"
.PD 0
.IP \-\-no\-changes\-filter\-pattern 4
.IX Item "--no-changes-filter-pattern"
.PD
Specify a pattern for change checking. When only running tests for changed files this will limit which files are checked for changes. Only files that match this pattern will be checked. Your pattern will be inserted unmodified into a `$file =~ m/$pattern/` check.
.Sp
Can be specified multiple times
.IP \-\-changes\-include\-whitespace 4
.IX Item "--changes-include-whitespace"
.PD 0
.IP \-\-no\-changes\-include\-whitespace 4
.IX Item "--no-changes-include-whitespace"
.PD
Include changed lines that are whitespace only (default: off)
.IP "\-\-changes\-plugin Git" 4
.IX Item "--changes-plugin Git"
.PD 0
.IP "\-\-changes\-plugin +App::Yath::Plugin::Git" 4
.IX Item "--changes-plugin +App::Yath::Plugin::Git"
.IP \-\-no\-changes\-plugin 4
.IX Item "--no-changes-plugin"
.PD
What plugin should be used to detect changed files.
.IP "\-\-default\-at\-search ARG" 4
.IX Item "--default-at-search ARG"
.PD 0
.IP \-\-default\-at\-search=ARG 4
.IX Item "--default-at-search=ARG"
.IP \-\-no\-default\-at\-search 4
.IX Item "--no-default-at-search"
.PD
Specify the default file/dir search when 'AUTHOR_TESTING' is set. Defaults to './xt'. The default AT search is only used if no files were specified at the command line
.Sp
Can be specified multiple times
.IP "\-\-default\-search ARG" 4
.IX Item "--default-search ARG"
.PD 0
.IP \-\-default\-search=ARG 4
.IX Item "--default-search=ARG"
.IP \-\-no\-default\-search 4
.IX Item "--no-default-search"
.PD
Specify the default file/dir search. defaults to './t', './t2', and 'test.pl'. The default search is only used if no files were specified at the command line
.Sp
Can be specified multiple times
.IP "\-\-durations file.json" 4
.IX Item "--durations file.json"
.PD 0
.IP "\-\-durations http://example.com/durations.json" 4
.IX Item "--durations http://example.com/durations.json"
.IP \-\-no\-durations 4
.IX Item "--no-durations"
.PD
Point at a json file or url which has a hash of relative test filenames as keys, and 'SHORT', 'MEDIUM', or 'LONG' as values. This will override durations listed in the file headers. An exception will be thrown if the durations file or url does not work.
.IP "\-\-durations\-threshold ARG" 4
.IX Item "--durations-threshold ARG"
.PD 0
.IP \-\-durations\-threshold=ARG 4
.IX Item "--durations-threshold=ARG"
.IP "\-\-Dt ARG" 4
.IX Item "--Dt ARG"
.IP \-\-Dt=ARG 4
.IX Item "--Dt=ARG"
.IP \-\-no\-durations\-threshold 4
.IX Item "--no-durations-threshold"
.PD
Only fetch duration data if running at least this number of tests. Default (\-j value + 1)
.IP "\-\-exclude\-file t/nope.t" 4
.IX Item "--exclude-file t/nope.t"
.PD 0
.IP \-\-no\-exclude\-file 4
.IX Item "--no-exclude-file"
.PD
Exclude a file from testing
.Sp
Can be specified multiple times
.IP "\-\-exclude\-list file.txt" 4
.IX Item "--exclude-list file.txt"
.PD 0
.IP "\-\-exclude\-list http://example.com/exclusions.txt" 4
.IX Item "--exclude-list http://example.com/exclusions.txt"
.IP \-\-no\-exclude\-list 4
.IX Item "--no-exclude-list"
.PD
Point at a file or url which has a new line separated list of test file names to exclude from testing. Starting a line with a '#' will comment it out (for compatibility with Test2::Aggregate list files).
.Sp
Can be specified multiple times
.IP "\-\-exclude\-pattern t/nope.t" 4
.IX Item "--exclude-pattern t/nope.t"
.PD 0
.IP \-\-no\-exclude\-pattern 4
.IX Item "--no-exclude-pattern"
.PD
Exclude a pattern from testing, matched using m/$PATTERN/
.Sp
Can be specified multiple times
.IP "\-\-extension ARG" 4
.IX Item "--extension ARG"
.PD 0
.IP \-\-extension=ARG 4
.IX Item "--extension=ARG"
.IP "\-\-ext ARG" 4
.IX Item "--ext ARG"
.IP \-\-ext=ARG 4
.IX Item "--ext=ARG"
.IP \-\-no\-extension 4
.IX Item "--no-extension"
.PD
Specify valid test filename extensions, default: t and t2
.Sp
Can be specified multiple times
.IP "\-\-maybe\-durations file.json" 4
.IX Item "--maybe-durations file.json"
.PD 0
.IP "\-\-maybe\-durations http://example.com/durations.json" 4
.IX Item "--maybe-durations http://example.com/durations.json"
.IP \-\-no\-maybe\-durations 4
.IX Item "--no-maybe-durations"
.PD
Point at a json file or url which has a hash of relative test filenames as keys, and 'SHORT', 'MEDIUM', or 'LONG' as values. This will override durations listed in the file headers. An exception will be thrown if the durations file or url does not work.
.IP \-\-no\-long 4
.IX Item "--no-long"
.PD 0
.IP \-\-no\-no\-long 4
.IX Item "--no-no-long"
.PD
Do not run tests that have their duration flag set to 'LONG'
.IP \-\-only\-long 4
.IX Item "--only-long"
.PD 0
.IP \-\-no\-only\-long 4
.IX Item "--no-only-long"
.PD
Only run tests that have their duration flag set to 'LONG'
.IP \-\-rerun 4
.IX Item "--rerun"
.PD 0
.IP \-\-rerun=path/to/log.jsonl 4
.IX Item "--rerun=path/to/log.jsonl"
.IP \-\-rerun=plugin_specific_string 4
.IX Item "--rerun=plugin_specific_string"
.IP \-\-no\-rerun 4
.IX Item "--no-rerun"
.PD
Re-Run tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP \-\-rerun\-all 4
.IX Item "--rerun-all"
.PD 0
.IP \-\-rerun\-all=path/to/log.jsonl 4
.IX Item "--rerun-all=path/to/log.jsonl"
.IP \-\-rerun\-all=plugin_specific_string 4
.IX Item "--rerun-all=plugin_specific_string"
.IP \-\-no\-rerun\-all 4
.IX Item "--no-rerun-all"
.PD
Re-Run all tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP \-\-rerun\-failed 4
.IX Item "--rerun-failed"
.PD 0
.IP \-\-rerun\-failed=path/to/log.jsonl 4
.IX Item "--rerun-failed=path/to/log.jsonl"
.IP \-\-rerun\-failed=plugin_specific_string 4
.IX Item "--rerun-failed=plugin_specific_string"
.IP \-\-no\-rerun\-failed 4
.IX Item "--no-rerun-failed"
.PD
Re-Run failed tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP \-\-rerun\-missed 4
.IX Item "--rerun-missed"
.PD 0
.IP \-\-rerun\-missed=path/to/log.jsonl 4
.IX Item "--rerun-missed=path/to/log.jsonl"
.IP \-\-rerun\-missed=plugin_specific_string 4
.IX Item "--rerun-missed=plugin_specific_string"
.IP \-\-no\-rerun\-missed 4
.IX Item "--no-rerun-missed"
.PD
Run missed tests from a previously aborted/stopped run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP "\-\-rerun\-modes failed,missed,..." 4
.IX Item "--rerun-modes failed,missed,..."
.PD 0
.IP "\-\-rerun\-modes all" 4
.IX Item "--rerun-modes all"
.IP "\-\-rerun\-modes failed" 4
.IX Item "--rerun-modes failed"
.IP "\-\-rerun\-modes missed" 4
.IX Item "--rerun-modes missed"
.IP "\-\-rerun\-modes passed" 4
.IX Item "--rerun-modes passed"
.IP "\-\-rerun\-modes retried" 4
.IX Item "--rerun-modes retried"
.IP "\-\-rerun\-mode failed,missed,..." 4
.IX Item "--rerun-mode failed,missed,..."
.IP "\-\-rerun\-mode all" 4
.IX Item "--rerun-mode all"
.IP "\-\-rerun\-mode failed" 4
.IX Item "--rerun-mode failed"
.IP "\-\-rerun\-mode missed" 4
.IX Item "--rerun-mode missed"
.IP "\-\-rerun\-mode passed" 4
.IX Item "--rerun-mode passed"
.IP "\-\-rerun\-mode retried" 4
.IX Item "--rerun-mode retried"
.IP \-\-no\-rerun\-modes 4
.IX Item "--no-rerun-modes"
.PD
Pick which test categories to run
.Sp
Can be specified multiple times
.IP \-\-rerun\-passed 4
.IX Item "--rerun-passed"
.PD 0
.IP \-\-rerun\-passed=path/to/log.jsonl 4
.IX Item "--rerun-passed=path/to/log.jsonl"
.IP \-\-rerun\-passed=plugin_specific_string 4
.IX Item "--rerun-passed=plugin_specific_string"
.IP \-\-no\-rerun\-passed 4
.IX Item "--no-rerun-passed"
.PD
Re-Run passed tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP "\-\-rerun\-plugin Foo" 4
.IX Item "--rerun-plugin Foo"
.PD 0
.IP "\-\-rerun\-plugin +App::Yath::Plugin::Foo" 4
.IX Item "--rerun-plugin +App::Yath::Plugin::Foo"
.IP \-\-no\-rerun\-plugin 4
.IX Item "--no-rerun-plugin"
.PD
What plugin(s) should be used for rerun (will fallback to other plugins if the listed ones decline the value, this is just used ot set an order of priority)
.Sp
Can be specified multiple times
.IP \-\-rerun\-retried 4
.IX Item "--rerun-retried"
.PD 0
.IP \-\-rerun\-retried=path/to/log.jsonl 4
.IX Item "--rerun-retried=path/to/log.jsonl"
.IP \-\-rerun\-retried=plugin_specific_string 4
.IX Item "--rerun-retried=plugin_specific_string"
.IP \-\-no\-rerun\-retried 4
.IX Item "--no-rerun-retried"
.PD
Re-Run retried tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP "\-\-search ARG" 4
.IX Item "--search ARG"
.PD 0
.IP \-\-search=ARG 4
.IX Item "--search=ARG"
.IP \-\-no\-search 4
.IX Item "--no-search"
.PD
List of tests and test directories to use instead of the default search paths. Typically these can simply be listed as command line arguments without the \-\-search prefix.
.Sp
Can be specified multiple times
.IP \-\-show\-changed\-files 4
.IX Item "--show-changed-files"
.PD 0
.IP \-\-no\-show\-changed\-files 4
.IX Item "--no-show-changed-files"
.PD
Print a list of changed files if any are found
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH MAINTAINERS
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH AUTHORS
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
