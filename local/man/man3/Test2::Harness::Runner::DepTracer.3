.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Test2::Harness::Runner::DepTracer 3"
.TH Test2::Harness::Runner::DepTracer 3 2023-10-03 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
Test2::Harness::Runner::DepTracer \- Tool for tracing module dependencies as
they are loaded.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This tool is used by Test2::Harness to build a graph of dependancies which can
then be used to blacklist modified modules (and anything thatuses them) when
they change under a preloaded runner.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use Test2::Harness::Runner::DepTracer;
\&
\&    my $dt = Test2::Harness::Runner::DepTracer\->new();
\&
\&    $dt\->start();
\&
\&    require Some::Thing;
\&
\&    # You can always check for and retrieve an active DepTrace this way:
\&    my $dt_reference = Test2::Harness::Runner::DepTracer\->ACTIVE;
\&
\&    $dt\->stop();
\&
\&    my $dep_map = $dt\->dep_map;
\&
\&    my $loaded_by = $dep_map\->{\*(AqSome/Thing.pm\*(Aq};
\&    print "Some::Thing was directly or indirectly loaded by:\en" . join("\en" => @$loaded_by) . "\en";
.Ve
.SH ATTRIBUTES
.IX Header "ATTRIBUTES"
These can be specified at construction, and will be populated during use.
.ie n .IP "$hashref = $dt\->exclude" 4
.el .IP "\f(CW$hashref\fR = \f(CW$dt\fR\->exclude" 4
.IX Item "$hashref = $dt->exclude"
A hashref of files/modules to exclude from dep tracking. By default \f(CW\*(C`strict\*(C'\fR
and \f(CW\*(C`warnings\*(C'\fR are excluded.
.ie n .IP "$hashref = $dt\->dep_map" 4
.el .IP "\f(CW$hashref\fR = \f(CW$dt\fR\->dep_map" 4
.IX Item "$hashref = $dt->dep_map"
Every file which is loaded while the tool is started will have an entry in this
hash, each value is an array of all files which loaded the key file directly or
indirectly.
.ie n .IP "$hashref = $dt\->loaded" 4
.el .IP "\f(CW$hashref\fR = \f(CW$dt\fR\->loaded" 4
.IX Item "$hashref = $dt->loaded"
How many times each file was directly loaded.
.SH METHODS
.IX Header "METHODS"
.ie n .IP $dt\->start 4
.el .IP \f(CW$dt\fR\->start 4
.IX Item "$dt->start"
Start tracking modules which are loaded.
.ie n .IP $dt\->stop 4
.el .IP \f(CW$dt\fR\->stop 4
.IX Item "$dt->stop"
Stop tracking moduels that are loaded.
.SH "CLASS METHODS"
.IX Header "CLASS METHODS"
.ie n .IP "$dt_or_undef = Test2::Harness::Runner::DepTracer\->\fBACTIVE()\fR;" 4
.el .IP "\f(CW$dt_or_undef\fR = Test2::Harness::Runner::DepTracer\->\fBACTIVE()\fR;" 4
.IX Item "$dt_or_undef = Test2::Harness::Runner::DepTracer->ACTIVE();"
Get the currently active DepTracer, if any.
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH MAINTAINERS
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH AUTHORS
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
