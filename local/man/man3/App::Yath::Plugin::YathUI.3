.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Yath::Plugin::YathUI 3"
.TH App::Yath::Plugin::YathUI 3 2023-10-03 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Yath::Plugin::YathUI \- Plugin to interact with a YathUI server
.SH DESCRIPTION
.IX Header "DESCRIPTION"
If you have a Yath-UI Test2::Harness::UI server, you can use this module to
have yath automatically upload logs or retrieve durations data
.SH "PROVIDED OPTIONS"
.IX Header "PROVIDED OPTIONS"
.SS "COMMAND OPTIONS"
.IX Subsection "COMMAND OPTIONS"
\fIYathUI Options\fR
.IX Subsection "YathUI Options"
.IP "\-\-yathui\-api\-key ARG" 4
.IX Item "--yathui-api-key ARG"
.PD 0
.IP \-\-yathui\-api\-key=ARG 4
.IX Item "--yathui-api-key=ARG"
.IP \-\-no\-yathui\-api\-key 4
.IX Item "--no-yathui-api-key"
.PD
Yath-UI API key. This is not necessary if your Yath-UI instance is set to single-user
.IP \-\-yathui\-coverage 4
.IX Item "--yathui-coverage"
.PD 0
.IP \-\-no\-yathui\-coverage 4
.IX Item "--no-yathui-coverage"
.PD
Poll coverage data from Yath-UI to determine what tests should be run for changed files
.IP \-\-yathui\-durations 4
.IX Item "--yathui-durations"
.PD 0
.IP \-\-no\-yathui\-durations 4
.IX Item "--no-yathui-durations"
.PD
Poll duration data from Yath-UI to help order tests efficiently
.IP \-\-yathui\-grace 4
.IX Item "--yathui-grace"
.PD 0
.IP \-\-no\-yathui\-grace 4
.IX Item "--no-yathui-grace"
.PD
If yath cannot connect to yath-ui it normally throws an error, use this to make it fail gracefully. You get a warning, but things keep going.
.IP "\-\-yathui\-long\-duration 10" 4
.IX Item "--yathui-long-duration 10"
.PD 0
.IP \-\-no\-yathui\-long\-duration 4
.IX Item "--no-yathui-long-duration"
.PD
Minimum duration length (seconds) before a test goes from MEDIUM to LONG
.IP "\-\-yathui\-medium\-duration 5" 4
.IX Item "--yathui-medium-duration 5"
.PD 0
.IP \-\-no\-yathui\-medium\-duration 4
.IX Item "--no-yathui-medium-duration"
.PD
Minimum duration length (seconds) before a test goes from SHORT to MEDIUM
.IP "\-\-yathui\-mode summary" 4
.IX Item "--yathui-mode summary"
.PD 0
.IP "\-\-yathui\-mode qvf" 4
.IX Item "--yathui-mode qvf"
.IP "\-\-yathui\-mode qvfd" 4
.IX Item "--yathui-mode qvfd"
.IP "\-\-yathui\-mode complete" 4
.IX Item "--yathui-mode complete"
.IP \-\-no\-yathui\-mode 4
.IX Item "--no-yathui-mode"
.PD
Set the upload mode (default 'qvfd')
.IP "\-\-yathui\-project ARG" 4
.IX Item "--yathui-project ARG"
.PD 0
.IP \-\-yathui\-project=ARG 4
.IX Item "--yathui-project=ARG"
.IP \-\-no\-yathui\-project 4
.IX Item "--no-yathui-project"
.PD
The Yath-UI project for your test results
.IP \-\-yathui\-retry 4
.IX Item "--yathui-retry"
.PD 0
.IP \-\-no\-yathui\-retry 4
.IX Item "--no-yathui-retry"
.PD
How many times to try an operation before giving up
.Sp
Can be specified multiple times
.IP \-\-yathui\-upload 4
.IX Item "--yathui-upload"
.PD 0
.IP \-\-no\-yathui\-upload 4
.IX Item "--no-yathui-upload"
.PD
Upload the log to Yath-UI
.IP "\-\-yathui\-url http://my\-yath\-ui.com/..." 4
.IX Item "--yathui-url http://my-yath-ui.com/..."
.PD 0
.IP "\-\-uri http://my\-yath\-ui.com/..." 4
.IX Item "--uri http://my-yath-ui.com/..."
.IP \-\-no\-yathui\-url 4
.IX Item "--no-yathui-url"
.PD
Yath-UI url
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH MAINTAINERS
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH AUTHORS
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
