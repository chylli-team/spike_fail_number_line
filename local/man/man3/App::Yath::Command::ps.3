.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Yath::Command::ps 3"
.TH App::Yath::Command::ps 3 2023-10-03 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Yath::Command::ps \- Process list for the runner
.SH DESCRIPTION
.IX Header "DESCRIPTION"
List all running processes and runner stages.
.SH USAGE
.IX Header "USAGE"
.Vb 1
\&    $ yath [YATH OPTIONS] ps [COMMAND OPTIONS]
.Ve
.SS "YATH OPTIONS"
.IX Subsection "YATH OPTIONS"
\fIDeveloper\fR
.IX Subsection "Developer"
.IP \-\-dev\-lib 4
.IX Item "--dev-lib"
.PD 0
.IP \-\-dev\-lib=lib 4
.IX Item "--dev-lib=lib"
.IP \-D 4
.IX Item "-D"
.IP \-D=lib 4
.IX Item "-D=lib"
.IP \-Dlib 4
.IX Item "-Dlib"
.IP \-\-no\-dev\-lib 4
.IX Item "--no-dev-lib"
.PD
Add paths to \f(CW@INC\fR before loading ANYTHING. This is what you use if you are developing yath or yath plugins to make sure the yath script finds the local code instead of the installed versions of the same code. You can provide an argument (\-Dfoo) to provide a custom path, or you can just use \-D without and arg to add lib, blib/lib and blib/arch.
.Sp
Can be specified multiple times
.PP
\fIEnvironment\fR
.IX Subsection "Environment"
.IP "\-\-persist\-dir ARG" 4
.IX Item "--persist-dir ARG"
.PD 0
.IP \-\-persist\-dir=ARG 4
.IX Item "--persist-dir=ARG"
.IP \-\-no\-persist\-dir 4
.IX Item "--no-persist-dir"
.PD
Where to find persistence files.
.IP "\-\-persist\-file ARG" 4
.IX Item "--persist-file ARG"
.PD 0
.IP \-\-persist\-file=ARG 4
.IX Item "--persist-file=ARG"
.IP "\-\-pfile ARG" 4
.IX Item "--pfile ARG"
.IP \-\-pfile=ARG 4
.IX Item "--pfile=ARG"
.IP \-\-no\-persist\-file 4
.IX Item "--no-persist-file"
.PD
Where to find the persistence file. The default is /{system\-tempdir}/project\-yath\-persist.json. If no project is specified then it will fall back to the current directory. If the current directory is not writable it will default to /tmp/yath\-persist.json which limits you to one persistent runner on your system.
.IP "\-\-project ARG" 4
.IX Item "--project ARG"
.PD 0
.IP \-\-project=ARG 4
.IX Item "--project=ARG"
.IP "\-\-project\-name ARG" 4
.IX Item "--project-name ARG"
.IP \-\-project\-name=ARG 4
.IX Item "--project-name=ARG"
.IP \-\-no\-project 4
.IX Item "--no-project"
.PD
This lets you provide a label for your current project/codebase. This is best used in a .yath.rc file. This is necessary for a persistent runner.
.PP
\fIFinder Options\fR
.IX Subsection "Finder Options"
.IP "\-\-finder MyFinder" 4
.IX Item "--finder MyFinder"
.PD 0
.IP "\-\-finder +Test2::Harness::Finder::MyFinder" 4
.IX Item "--finder +Test2::Harness::Finder::MyFinder"
.IP \-\-no\-finder 4
.IX Item "--no-finder"
.PD
Specify what Finder subclass to use when searching for files/processing the file list. Use the "+" prefix to specify a fully qualified namespace, otherwise Test2::Harness::Finder::XXX namespace is assumed.
.PP
\fIHelp and Debugging\fR
.IX Subsection "Help and Debugging"
.IP \-\-show\-opts 4
.IX Item "--show-opts"
.PD 0
.IP \-\-no\-show\-opts 4
.IX Item "--no-show-opts"
.PD
Exit after showing what yath thinks your options mean
.IP \-\-version 4
.IX Item "--version"
.PD 0
.IP \-V 4
.IX Item "-V"
.IP \-\-no\-version 4
.IX Item "--no-version"
.PD
Exit after showing a helpful usage message
.PP
\fIPlugins\fR
.IX Subsection "Plugins"
.IP \-\-no\-scan\-plugins 4
.IX Item "--no-scan-plugins"
.PD 0
.IP \-\-no\-no\-scan\-plugins 4
.IX Item "--no-no-scan-plugins"
.PD
Normally yath scans for and loads all App::Yath::Plugin::* modules in order to bring in command-line options they may provide. This flag will disable that. This is useful if you have a naughty plugin that is loading other modules when it should not.
.IP "\-\-plugins PLUGIN" 4
.IX Item "--plugins PLUGIN"
.PD 0
.IP "\-\-plugins +App::Yath::Plugin::PLUGIN" 4
.IX Item "--plugins +App::Yath::Plugin::PLUGIN"
.IP "\-\-plugins PLUGIN=arg1,arg2,..." 4
.IX Item "--plugins PLUGIN=arg1,arg2,..."
.IP "\-\-plugin PLUGIN" 4
.IX Item "--plugin PLUGIN"
.IP "\-\-plugin +App::Yath::Plugin::PLUGIN" 4
.IX Item "--plugin +App::Yath::Plugin::PLUGIN"
.IP "\-\-plugin PLUGIN=arg1,arg2,..." 4
.IX Item "--plugin PLUGIN=arg1,arg2,..."
.IP \-pPLUGIN 4
.IX Item "-pPLUGIN"
.IP \-\-no\-plugins 4
.IX Item "--no-plugins"
.PD
Load a yath plugin.
.Sp
Can be specified multiple times
.SS "COMMAND OPTIONS"
.IX Subsection "COMMAND OPTIONS"
\fICover Options\fR
.IX Subsection "Cover Options"
.IP "\-\-cover\-aggregator ByTest" 4
.IX Item "--cover-aggregator ByTest"
.PD 0
.IP "\-\-cover\-aggregator ByRun" 4
.IX Item "--cover-aggregator ByRun"
.IP "\-\-cover\-aggregator +Custom::Aggregator" 4
.IX Item "--cover-aggregator +Custom::Aggregator"
.IP "\-\-cover\-agg ByTest" 4
.IX Item "--cover-agg ByTest"
.IP "\-\-cover\-agg ByRun" 4
.IX Item "--cover-agg ByRun"
.IP "\-\-cover\-agg +Custom::Aggregator" 4
.IX Item "--cover-agg +Custom::Aggregator"
.IP \-\-no\-cover\-aggregator 4
.IX Item "--no-cover-aggregator"
.PD
Choose a custom aggregator subclass
.IP "\-\-cover\-class ARG" 4
.IX Item "--cover-class ARG"
.PD 0
.IP \-\-cover\-class=ARG 4
.IX Item "--cover-class=ARG"
.IP \-\-no\-cover\-class 4
.IX Item "--no-cover-class"
.PD
Choose a Test2::Plugin::Cover subclass
.IP "\-\-cover\-dirs ARG" 4
.IX Item "--cover-dirs ARG"
.PD 0
.IP \-\-cover\-dirs=ARG 4
.IX Item "--cover-dirs=ARG"
.IP "\-\-cover\-dir ARG" 4
.IX Item "--cover-dir ARG"
.IP \-\-cover\-dir=ARG 4
.IX Item "--cover-dir=ARG"
.IP \-\-no\-cover\-dirs 4
.IX Item "--no-cover-dirs"
.PD
NO DESCRIPTION \- FIX ME
.Sp
Can be specified multiple times
.IP \-\-cover\-exclude\-private 4
.IX Item "--cover-exclude-private"
.PD 0
.IP \-\-no\-cover\-exclude\-private 4
.IX Item "--no-cover-exclude-private"
.IP \-\-cover\-files 4
.IX Item "--cover-files"
.IP \-\-no\-cover\-files 4
.IX Item "--no-cover-files"
.PD
Use Test2::Plugin::Cover to collect coverage data for what files are touched by what tests. Unlike Devel::Cover this has very little performance impact (About 4% difference)
.IP "\-\-cover\-from path/to/log.jsonl" 4
.IX Item "--cover-from path/to/log.jsonl"
.PD 0
.IP "\-\-cover\-from http://example.com/coverage" 4
.IX Item "--cover-from http://example.com/coverage"
.IP "\-\-cover\-from path/to/coverage.jsonl" 4
.IX Item "--cover-from path/to/coverage.jsonl"
.IP \-\-no\-cover\-from 4
.IX Item "--no-cover-from"
.PD
This can be a test log, a coverage dump (old style json or new jsonl format), or a url to any of the previous. Tests will not be run if the file/url is invalid.
.IP "\-\-cover\-from\-type json" 4
.IX Item "--cover-from-type json"
.PD 0
.IP "\-\-cover\-from\-type jsonl" 4
.IX Item "--cover-from-type jsonl"
.IP "\-\-cover\-from\-type log" 4
.IX Item "--cover-from-type log"
.IP \-\-no\-cover\-from\-type 4
.IX Item "--no-cover-from-type"
.PD
File type for coverage source. Usually it can be detected, but when it cannot be you should specify. "json" is old style single-blob coverage data, "jsonl" is the new by-test style, "log" is a logfile from a previous run.
.IP "\-\-cover\-manager My::Coverage::Manager" 4
.IX Item "--cover-manager My::Coverage::Manager"
.PD 0
.IP \-\-no\-cover\-manager 4
.IX Item "--no-cover-manager"
.PD
Coverage 'from' manager to use when coverage data does not provide one
.IP "\-\-cover\-maybe\-from path/to/log.jsonl" 4
.IX Item "--cover-maybe-from path/to/log.jsonl"
.PD 0
.IP "\-\-cover\-maybe\-from http://example.com/coverage" 4
.IX Item "--cover-maybe-from http://example.com/coverage"
.IP "\-\-cover\-maybe\-from path/to/coverage.jsonl" 4
.IX Item "--cover-maybe-from path/to/coverage.jsonl"
.IP \-\-no\-cover\-maybe\-from 4
.IX Item "--no-cover-maybe-from"
.PD
This can be a test log, a coverage dump (old style json or new jsonl format), or a url to any of the previous. Tests will coninue if even if the coverage file/url is invalid.
.IP "\-\-cover\-maybe\-from\-type json" 4
.IX Item "--cover-maybe-from-type json"
.PD 0
.IP "\-\-cover\-maybe\-from\-type jsonl" 4
.IX Item "--cover-maybe-from-type jsonl"
.IP "\-\-cover\-maybe\-from\-type log" 4
.IX Item "--cover-maybe-from-type log"
.IP \-\-no\-cover\-maybe\-from\-type 4
.IX Item "--no-cover-maybe-from-type"
.PD
Same as "from_type" but for "maybe_from". Defaults to "from_type" if that is specified, otherwise auto-detect
.IP \-\-cover\-metrics 4
.IX Item "--cover-metrics"
.PD 0
.IP \-\-no\-cover\-metrics 4
.IX Item "--no-cover-metrics"
.IP "\-\-cover\-types ARG" 4
.IX Item "--cover-types ARG"
.IP \-\-cover\-types=ARG 4
.IX Item "--cover-types=ARG"
.IP "\-\-cover\-type ARG" 4
.IX Item "--cover-type ARG"
.IP \-\-cover\-type=ARG 4
.IX Item "--cover-type=ARG"
.IP \-\-no\-cover\-types 4
.IX Item "--no-cover-types"
.PD
NO DESCRIPTION \- FIX ME
.Sp
Can be specified multiple times
.IP \-\-cover\-write 4
.IX Item "--cover-write"
.PD 0
.IP \-\-cover\-write=coverage.jsonl 4
.IX Item "--cover-write=coverage.jsonl"
.IP \-\-cover\-write=coverage.json 4
.IX Item "--cover-write=coverage.json"
.IP \-\-no\-cover\-write 4
.IX Item "--no-cover-write"
.PD
Create a json or jsonl file of all coverage data seen during the run (This implies \-\-cover\-files).
.PP
\fIDisplay Options\fR
.IX Subsection "Display Options"
.IP \-\-color 4
.IX Item "--color"
.PD 0
.IP \-\-no\-color 4
.IX Item "--no-color"
.PD
Turn color on, default is true if STDOUT is a TTY.
.IP \-\-hide\-runner\-output 4
.IX Item "--hide-runner-output"
.PD 0
.IP \-\-no\-hide\-runner\-output 4
.IX Item "--no-hide-runner-output"
.PD
Hide output from the runner, showing only test output. (See Also truncate_runner_output)
.IP \-\-no\-wrap 4
.IX Item "--no-wrap"
.PD 0
.IP \-\-no\-no\-wrap 4
.IX Item "--no-no-wrap"
.PD
Do not do fancy text-wrapping, let the terminal handle it
.IP \-\-progress 4
.IX Item "--progress"
.PD 0
.IP \-\-no\-progress 4
.IX Item "--no-progress"
.PD
Toggle progress indicators. On by default if STDOUT is a TTY. You can use \-\-no\-progress to disable the 'events seen' counter and buffered event pre-display
.IP \-\-quiet 4
.IX Item "--quiet"
.PD 0
.IP \-q 4
.IX Item "-q"
.IP \-\-no\-quiet 4
.IX Item "--no-quiet"
.PD
Be very quiet.
.Sp
Can be specified multiple times
.IP "\-\-renderers +My::Renderer" 4
.IX Item "--renderers +My::Renderer"
.PD 0
.IP "\-\-renderers Renderer=arg1,arg2,..." 4
.IX Item "--renderers Renderer=arg1,arg2,..."
.IP "\-\-renderer +My::Renderer" 4
.IX Item "--renderer +My::Renderer"
.IP "\-\-renderer Renderer=arg1,arg2,..." 4
.IX Item "--renderer Renderer=arg1,arg2,..."
.IP \-\-no\-renderers 4
.IX Item "--no-renderers"
.PD
Specify renderers, (Default: "Formatter=Test2"). Use "+" to give a fully qualified module name. Without "+" "Test2::Harness::Renderer::" will be prepended to your argument.
.Sp
Can be specified multiple times. If the same key is listed multiple times the value lists will be appended together.
.IP \-\-show\-times 4
.IX Item "--show-times"
.PD 0
.IP \-T 4
.IX Item "-T"
.IP \-\-no\-show\-times 4
.IX Item "--no-show-times"
.PD
Show the timing data for each job
.IP "\-\-term\-width 80" 4
.IX Item "--term-width 80"
.PD 0
.IP "\-\-term\-width 200" 4
.IX Item "--term-width 200"
.IP "\-\-term\-size 80" 4
.IX Item "--term-size 80"
.IP "\-\-term\-size 200" 4
.IX Item "--term-size 200"
.IP \-\-no\-term\-width 4
.IX Item "--no-term-width"
.PD
Alternative to setting \f(CW$TABLE_TERM_SIZE\fR. Setting this will override the terminal width detection to the number of characters specified.
.IP \-\-truncate\-runner\-output 4
.IX Item "--truncate-runner-output"
.PD 0
.IP \-\-no\-truncate\-runner\-output 4
.IX Item "--no-truncate-runner-output"
.PD
Only show runner output that was generated after the current command. This is only useful with a persistent runner.
.IP \-\-verbose 4
.IX Item "--verbose"
.PD 0
.IP \-v 4
.IX Item "-v"
.IP \-\-no\-verbose 4
.IX Item "--no-verbose"
.PD
Be more verbose
.Sp
Can be specified multiple times
.PP
\fIFinder Options\fR
.IX Subsection "Finder Options"
.IP "\-\-changed path/to/file" 4
.IX Item "--changed path/to/file"
.PD 0
.IP \-\-no\-changed 4
.IX Item "--no-changed"
.PD
Specify one or more files as having been changed.
.Sp
Can be specified multiple times
.IP \-\-changed\-only 4
.IX Item "--changed-only"
.PD 0
.IP \-\-no\-changed\-only 4
.IX Item "--no-changed-only"
.PD
Only search for tests for changed files (Requires a coverage data source, also requires a list of changes either from the \-\-changed option, or a plugin that implements \fBchanged_files()\fR or \fBchanged_diff()\fR)
.IP "\-\-changes\-diff path/to/diff.diff" 4
.IX Item "--changes-diff path/to/diff.diff"
.PD 0
.IP \-\-no\-changes\-diff 4
.IX Item "--no-changes-diff"
.PD
Path to a diff file that should be used to find changed files for use with \-\-changed\-only. This must be in the same format as `git diff \-W \-\-minimal \-U1000000`
.IP "\-\-changes\-exclude\-file path/to/file" 4
.IX Item "--changes-exclude-file path/to/file"
.PD 0
.IP \-\-no\-changes\-exclude\-file 4
.IX Item "--no-changes-exclude-file"
.PD
Specify one or more files to ignore when looking at changes
.Sp
Can be specified multiple times
.IP \-\-changes\-exclude\-loads 4
.IX Item "--changes-exclude-loads"
.PD 0
.IP \-\-no\-changes\-exclude\-loads 4
.IX Item "--no-changes-exclude-loads"
.PD
Exclude coverage tests which only load changed files, but never call code from them. (default: off)
.IP \-\-changes\-exclude\-nonsub 4
.IX Item "--changes-exclude-nonsub"
.PD 0
.IP \-\-no\-changes\-exclude\-nonsub 4
.IX Item "--no-changes-exclude-nonsub"
.PD
Exclude changes outside of subroutines (perl files only) (default: off)
.IP \-\-changes\-exclude\-opens 4
.IX Item "--changes-exclude-opens"
.PD 0
.IP \-\-no\-changes\-exclude\-opens 4
.IX Item "--no-changes-exclude-opens"
.PD
Exclude coverage tests which only \fBopen()\fR changed files, but never call code from them. (default: off)
.IP "\-\-changes\-exclude\-pattern '(apple|pear|orange)'" 4
.IX Item "--changes-exclude-pattern '(apple|pear|orange)'"
.PD 0
.IP \-\-no\-changes\-exclude\-pattern 4
.IX Item "--no-changes-exclude-pattern"
.PD
Ignore files matching this pattern when looking for changes. Your pattern will be inserted unmodified into a `$file =~ m/$pattern/` check.
.Sp
Can be specified multiple times
.IP "\-\-changes\-filter\-file path/to/file" 4
.IX Item "--changes-filter-file path/to/file"
.PD 0
.IP \-\-no\-changes\-filter\-file 4
.IX Item "--no-changes-filter-file"
.PD
Specify one or more files to check for changes. Changes to other files will be ignored
.Sp
Can be specified multiple times
.IP "\-\-changes\-filter\-pattern '(apple|pear|orange)'" 4
.IX Item "--changes-filter-pattern '(apple|pear|orange)'"
.PD 0
.IP \-\-no\-changes\-filter\-pattern 4
.IX Item "--no-changes-filter-pattern"
.PD
Specify a pattern for change checking. When only running tests for changed files this will limit which files are checked for changes. Only files that match this pattern will be checked. Your pattern will be inserted unmodified into a `$file =~ m/$pattern/` check.
.Sp
Can be specified multiple times
.IP \-\-changes\-include\-whitespace 4
.IX Item "--changes-include-whitespace"
.PD 0
.IP \-\-no\-changes\-include\-whitespace 4
.IX Item "--no-changes-include-whitespace"
.PD
Include changed lines that are whitespace only (default: off)
.IP "\-\-changes\-plugin Git" 4
.IX Item "--changes-plugin Git"
.PD 0
.IP "\-\-changes\-plugin +App::Yath::Plugin::Git" 4
.IX Item "--changes-plugin +App::Yath::Plugin::Git"
.IP \-\-no\-changes\-plugin 4
.IX Item "--no-changes-plugin"
.PD
What plugin should be used to detect changed files.
.IP "\-\-default\-at\-search ARG" 4
.IX Item "--default-at-search ARG"
.PD 0
.IP \-\-default\-at\-search=ARG 4
.IX Item "--default-at-search=ARG"
.IP \-\-no\-default\-at\-search 4
.IX Item "--no-default-at-search"
.PD
Specify the default file/dir search when 'AUTHOR_TESTING' is set. Defaults to './xt'. The default AT search is only used if no files were specified at the command line
.Sp
Can be specified multiple times
.IP "\-\-default\-search ARG" 4
.IX Item "--default-search ARG"
.PD 0
.IP \-\-default\-search=ARG 4
.IX Item "--default-search=ARG"
.IP \-\-no\-default\-search 4
.IX Item "--no-default-search"
.PD
Specify the default file/dir search. defaults to './t', './t2', and 'test.pl'. The default search is only used if no files were specified at the command line
.Sp
Can be specified multiple times
.IP "\-\-durations file.json" 4
.IX Item "--durations file.json"
.PD 0
.IP "\-\-durations http://example.com/durations.json" 4
.IX Item "--durations http://example.com/durations.json"
.IP \-\-no\-durations 4
.IX Item "--no-durations"
.PD
Point at a json file or url which has a hash of relative test filenames as keys, and 'SHORT', 'MEDIUM', or 'LONG' as values. This will override durations listed in the file headers. An exception will be thrown if the durations file or url does not work.
.IP "\-\-durations\-threshold ARG" 4
.IX Item "--durations-threshold ARG"
.PD 0
.IP \-\-durations\-threshold=ARG 4
.IX Item "--durations-threshold=ARG"
.IP "\-\-Dt ARG" 4
.IX Item "--Dt ARG"
.IP \-\-Dt=ARG 4
.IX Item "--Dt=ARG"
.IP \-\-no\-durations\-threshold 4
.IX Item "--no-durations-threshold"
.PD
Only fetch duration data if running at least this number of tests. Default (\-j value + 1)
.IP "\-\-exclude\-file t/nope.t" 4
.IX Item "--exclude-file t/nope.t"
.PD 0
.IP \-\-no\-exclude\-file 4
.IX Item "--no-exclude-file"
.PD
Exclude a file from testing
.Sp
Can be specified multiple times
.IP "\-\-exclude\-list file.txt" 4
.IX Item "--exclude-list file.txt"
.PD 0
.IP "\-\-exclude\-list http://example.com/exclusions.txt" 4
.IX Item "--exclude-list http://example.com/exclusions.txt"
.IP \-\-no\-exclude\-list 4
.IX Item "--no-exclude-list"
.PD
Point at a file or url which has a new line separated list of test file names to exclude from testing. Starting a line with a '#' will comment it out (for compatibility with Test2::Aggregate list files).
.Sp
Can be specified multiple times
.IP "\-\-exclude\-pattern t/nope.t" 4
.IX Item "--exclude-pattern t/nope.t"
.PD 0
.IP \-\-no\-exclude\-pattern 4
.IX Item "--no-exclude-pattern"
.PD
Exclude a pattern from testing, matched using m/$PATTERN/
.Sp
Can be specified multiple times
.IP "\-\-extension ARG" 4
.IX Item "--extension ARG"
.PD 0
.IP \-\-extension=ARG 4
.IX Item "--extension=ARG"
.IP "\-\-ext ARG" 4
.IX Item "--ext ARG"
.IP \-\-ext=ARG 4
.IX Item "--ext=ARG"
.IP \-\-no\-extension 4
.IX Item "--no-extension"
.PD
Specify valid test filename extensions, default: t and t2
.Sp
Can be specified multiple times
.IP "\-\-maybe\-durations file.json" 4
.IX Item "--maybe-durations file.json"
.PD 0
.IP "\-\-maybe\-durations http://example.com/durations.json" 4
.IX Item "--maybe-durations http://example.com/durations.json"
.IP \-\-no\-maybe\-durations 4
.IX Item "--no-maybe-durations"
.PD
Point at a json file or url which has a hash of relative test filenames as keys, and 'SHORT', 'MEDIUM', or 'LONG' as values. This will override durations listed in the file headers. An exception will be thrown if the durations file or url does not work.
.IP \-\-no\-long 4
.IX Item "--no-long"
.PD 0
.IP \-\-no\-no\-long 4
.IX Item "--no-no-long"
.PD
Do not run tests that have their duration flag set to 'LONG'
.IP \-\-only\-long 4
.IX Item "--only-long"
.PD 0
.IP \-\-no\-only\-long 4
.IX Item "--no-only-long"
.PD
Only run tests that have their duration flag set to 'LONG'
.IP \-\-rerun 4
.IX Item "--rerun"
.PD 0
.IP \-\-rerun=path/to/log.jsonl 4
.IX Item "--rerun=path/to/log.jsonl"
.IP \-\-rerun=plugin_specific_string 4
.IX Item "--rerun=plugin_specific_string"
.IP \-\-no\-rerun 4
.IX Item "--no-rerun"
.PD
Re-Run tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP \-\-rerun\-all 4
.IX Item "--rerun-all"
.PD 0
.IP \-\-rerun\-all=path/to/log.jsonl 4
.IX Item "--rerun-all=path/to/log.jsonl"
.IP \-\-rerun\-all=plugin_specific_string 4
.IX Item "--rerun-all=plugin_specific_string"
.IP \-\-no\-rerun\-all 4
.IX Item "--no-rerun-all"
.PD
Re-Run all tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP \-\-rerun\-failed 4
.IX Item "--rerun-failed"
.PD 0
.IP \-\-rerun\-failed=path/to/log.jsonl 4
.IX Item "--rerun-failed=path/to/log.jsonl"
.IP \-\-rerun\-failed=plugin_specific_string 4
.IX Item "--rerun-failed=plugin_specific_string"
.IP \-\-no\-rerun\-failed 4
.IX Item "--no-rerun-failed"
.PD
Re-Run failed tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP \-\-rerun\-missed 4
.IX Item "--rerun-missed"
.PD 0
.IP \-\-rerun\-missed=path/to/log.jsonl 4
.IX Item "--rerun-missed=path/to/log.jsonl"
.IP \-\-rerun\-missed=plugin_specific_string 4
.IX Item "--rerun-missed=plugin_specific_string"
.IP \-\-no\-rerun\-missed 4
.IX Item "--no-rerun-missed"
.PD
Run missed tests from a previously aborted/stopped run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP "\-\-rerun\-modes failed,missed,..." 4
.IX Item "--rerun-modes failed,missed,..."
.PD 0
.IP "\-\-rerun\-modes all" 4
.IX Item "--rerun-modes all"
.IP "\-\-rerun\-modes failed" 4
.IX Item "--rerun-modes failed"
.IP "\-\-rerun\-modes missed" 4
.IX Item "--rerun-modes missed"
.IP "\-\-rerun\-modes passed" 4
.IX Item "--rerun-modes passed"
.IP "\-\-rerun\-modes retried" 4
.IX Item "--rerun-modes retried"
.IP "\-\-rerun\-mode failed,missed,..." 4
.IX Item "--rerun-mode failed,missed,..."
.IP "\-\-rerun\-mode all" 4
.IX Item "--rerun-mode all"
.IP "\-\-rerun\-mode failed" 4
.IX Item "--rerun-mode failed"
.IP "\-\-rerun\-mode missed" 4
.IX Item "--rerun-mode missed"
.IP "\-\-rerun\-mode passed" 4
.IX Item "--rerun-mode passed"
.IP "\-\-rerun\-mode retried" 4
.IX Item "--rerun-mode retried"
.IP \-\-no\-rerun\-modes 4
.IX Item "--no-rerun-modes"
.PD
Pick which test categories to run
.Sp
Can be specified multiple times
.IP \-\-rerun\-passed 4
.IX Item "--rerun-passed"
.PD 0
.IP \-\-rerun\-passed=path/to/log.jsonl 4
.IX Item "--rerun-passed=path/to/log.jsonl"
.IP \-\-rerun\-passed=plugin_specific_string 4
.IX Item "--rerun-passed=plugin_specific_string"
.IP \-\-no\-rerun\-passed 4
.IX Item "--no-rerun-passed"
.PD
Re-Run passed tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP "\-\-rerun\-plugin Foo" 4
.IX Item "--rerun-plugin Foo"
.PD 0
.IP "\-\-rerun\-plugin +App::Yath::Plugin::Foo" 4
.IX Item "--rerun-plugin +App::Yath::Plugin::Foo"
.IP \-\-no\-rerun\-plugin 4
.IX Item "--no-rerun-plugin"
.PD
What plugin(s) should be used for rerun (will fallback to other plugins if the listed ones decline the value, this is just used ot set an order of priority)
.Sp
Can be specified multiple times
.IP \-\-rerun\-retried 4
.IX Item "--rerun-retried"
.PD 0
.IP \-\-rerun\-retried=path/to/log.jsonl 4
.IX Item "--rerun-retried=path/to/log.jsonl"
.IP \-\-rerun\-retried=plugin_specific_string 4
.IX Item "--rerun-retried=plugin_specific_string"
.IP \-\-no\-rerun\-retried 4
.IX Item "--no-rerun-retried"
.PD
Re-Run retried tests from a previous run from a log file (or last log file). Plugins can intercept this, such as YathUIDB which will grab a run UUID and derive tests to re-run from that.
.IP "\-\-search ARG" 4
.IX Item "--search ARG"
.PD 0
.IP \-\-search=ARG 4
.IX Item "--search=ARG"
.IP \-\-no\-search 4
.IX Item "--no-search"
.PD
List of tests and test directories to use instead of the default search paths. Typically these can simply be listed as command line arguments without the \-\-search prefix.
.Sp
Can be specified multiple times
.IP \-\-show\-changed\-files 4
.IX Item "--show-changed-files"
.PD 0
.IP \-\-no\-show\-changed\-files 4
.IX Item "--no-show-changed-files"
.PD
Print a list of changed files if any are found
.PP
\fIFormatter Options\fR
.IX Subsection "Formatter Options"
.IP "\-\-formatter ARG" 4
.IX Item "--formatter ARG"
.PD 0
.IP \-\-formatter=ARG 4
.IX Item "--formatter=ARG"
.IP \-\-no\-formatter 4
.IX Item "--no-formatter"
.PD
NO DESCRIPTION \- FIX ME
.IP \-\-qvf 4
.IX Item "--qvf"
.PD 0
.IP \-\-no\-qvf 4
.IX Item "--no-qvf"
.PD
[Q]uiet, but [V]erbose on [F]ailure. Hide all output from tests when they pass, except to say they passed. If a test fails then ALL output from the test is verbosely output.
.IP \-\-show\-job\-end 4
.IX Item "--show-job-end"
.PD 0
.IP \-\-no\-show\-job\-end 4
.IX Item "--no-show-job-end"
.PD
Show output when a job ends. (Default: on)
.IP \-\-show\-job\-info 4
.IX Item "--show-job-info"
.PD 0
.IP \-\-no\-show\-job\-info 4
.IX Item "--no-show-job-info"
.PD
Show the job configuration when a job starts. (Default: off, unless \-vv)
.IP \-\-show\-job\-launch 4
.IX Item "--show-job-launch"
.PD 0
.IP \-\-no\-show\-job\-launch 4
.IX Item "--no-show-job-launch"
.PD
Show output for the start of a job. (Default: off unless \-v)
.IP \-\-show\-run\-info 4
.IX Item "--show-run-info"
.PD 0
.IP \-\-no\-show\-run\-info 4
.IX Item "--no-show-run-info"
.PD
Show the run configuration when a run starts. (Default: off, unless \-vv)
.PP
\fIGit Options\fR
.IX Subsection "Git Options"
.IP "\-\-git\-change\-base master" 4
.IX Item "--git-change-base master"
.PD 0
.IP "\-\-git\-change\-base HEAD^" 4
.IX Item "--git-change-base HEAD^"
.IP "\-\-git\-change\-base df22abe4" 4
.IX Item "--git-change-base df22abe4"
.IP \-\-no\-git\-change\-base 4
.IX Item "--no-git-change-base"
.PD
Find files changed by all commits in the current branch from most recent stopping when a commit is found that is also present in the history of the branch/commit specified as the change base.
.PP
\fIHelp and Debugging\fR
.IX Subsection "Help and Debugging"
.IP \-\-dummy 4
.IX Item "--dummy"
.PD 0
.IP \-d 4
.IX Item "-d"
.IP \-\-no\-dummy 4
.IX Item "--no-dummy"
.PD
Dummy run, do not actually execute anything
.Sp
Can also be set with the following environment variables: \f(CW\*(C`T2_HARNESS_DUMMY\*(C'\fR
.IP \-\-help 4
.IX Item "--help"
.PD 0
.IP \-h 4
.IX Item "-h"
.IP \-\-no\-help 4
.IX Item "--no-help"
.PD
exit after showing help information
.IP \-\-interactive 4
.IX Item "--interactive"
.PD 0
.IP \-i 4
.IX Item "-i"
.IP \-\-no\-interactive 4
.IX Item "--no-interactive"
.PD
Use interactive mode, 1 test at a time, stdin forwarded to it
.IP \-\-keep\-dirs 4
.IX Item "--keep-dirs"
.PD 0
.IP \-\-keep_dir 4
.IX Item "--keep_dir"
.IP \-k 4
.IX Item "-k"
.IP \-\-no\-keep\-dirs 4
.IX Item "--no-keep-dirs"
.PD
Do not delete directories when done. This is useful if you want to inspect the directories used for various commands.
.IP "\-\-procname\-prefix ARG" 4
.IX Item "--procname-prefix ARG"
.PD 0
.IP \-\-procname\-prefix=ARG 4
.IX Item "--procname-prefix=ARG"
.IP \-\-no\-procname\-prefix 4
.IX Item "--no-procname-prefix"
.PD
Add a prefix to all proc names (as seen by ps).
.IP \-\-summary 4
.IX Item "--summary"
.PD 0
.IP \-\-summary=/path/to/summary.json 4
.IX Item "--summary=/path/to/summary.json"
.IP \-\-no\-summary 4
.IX Item "--no-summary"
.PD
Write out a summary json file, if no path is provided 'summary.json' will be used. The .json extension is added automatically if omitted.
.PP
\fILogging Options\fR
.IX Subsection "Logging Options"
.IP \-\-bzip2 4
.IX Item "--bzip2"
.PD 0
.IP \-\-bz2 4
.IX Item "--bz2"
.IP \-\-bzip2_log 4
.IX Item "--bzip2_log"
.IP \-B 4
.IX Item "-B"
.IP \-\-no\-bzip2 4
.IX Item "--no-bzip2"
.PD
Use bzip2 compression when writing the log. This option implies \-L. The .bz2 prefix is added to log file name for you
.IP \-\-gzip 4
.IX Item "--gzip"
.PD 0
.IP \-\-gz 4
.IX Item "--gz"
.IP \-\-gzip_log 4
.IX Item "--gzip_log"
.IP \-G 4
.IX Item "-G"
.IP \-\-no\-gzip 4
.IX Item "--no-gzip"
.PD
Use gzip compression when writing the log. This option implies \-L. The .gz prefix is added to log file name for you
.IP \-\-log 4
.IX Item "--log"
.PD 0
.IP \-L 4
.IX Item "-L"
.IP \-\-no\-log 4
.IX Item "--no-log"
.PD
Turn on logging
.IP "\-\-log\-dir ARG" 4
.IX Item "--log-dir ARG"
.PD 0
.IP \-\-log\-dir=ARG 4
.IX Item "--log-dir=ARG"
.IP \-\-no\-log\-dir 4
.IX Item "--no-log-dir"
.PD
Specify a log directory. Will fall back to the system temp dir.
.IP "\-\-log\-file ARG" 4
.IX Item "--log-file ARG"
.PD 0
.IP \-\-log\-file=ARG 4
.IX Item "--log-file=ARG"
.IP "\-F ARG" 4
.IX Item "-F ARG"
.IP \-F=ARG 4
.IX Item "-F=ARG"
.IP \-\-no\-log\-file 4
.IX Item "--no-log-file"
.PD
Specify the name of the log file. This option implies \-L.
.IP "\-\-log\-file\-format ARG" 4
.IX Item "--log-file-format ARG"
.PD 0
.IP \-\-log\-file\-format=ARG 4
.IX Item "--log-file-format=ARG"
.IP "\-\-lff ARG" 4
.IX Item "--lff ARG"
.IP \-\-lff=ARG 4
.IX Item "--lff=ARG"
.IP \-\-no\-log\-file\-format 4
.IX Item "--no-log-file-format"
.PD
Specify the format for automatically-generated log files. Overridden by \-\-log\-file, if given. This option implies \-L (Default: \e$YATH_LOG_FILE_FORMAT, if that is set, or else "%!P%Y\-%m\-%d~%H:%M:%S~%!U~%!p.jsonl"). This is a string in which percent-escape sequences will be replaced as per POSIX::strftime. The following special escape sequences are also replaced: (%!P : Project name followed by a ~, if a project is defined, otherwise empty string) (%!U : the unique test run ID) (%!p : the process ID) (%!S : the number of seconds since local midnight UTC)
.Sp
Can also be set with the following environment variables: \f(CW\*(C`YATH_LOG_FILE_FORMAT\*(C'\fR, \f(CW\*(C`TEST2_HARNESS_LOG_FORMAT\*(C'\fR
.PP
\fINotification Options\fR
.IX Subsection "Notification Options"
.IP "\-\-notify\-email foo@example.com" 4
.IX Item "--notify-email foo@example.com"
.PD 0
.IP \-\-no\-notify\-email 4
.IX Item "--no-notify-email"
.PD
Email the test results to the specified email address(es)
.Sp
Can be specified multiple times
.IP "\-\-notify\-email\-fail foo@example.com" 4
.IX Item "--notify-email-fail foo@example.com"
.PD 0
.IP \-\-no\-notify\-email\-fail 4
.IX Item "--no-notify-email-fail"
.PD
Email failing results to the specified email address(es)
.Sp
Can be specified multiple times
.IP "\-\-notify\-email\-from foo@example.com" 4
.IX Item "--notify-email-from foo@example.com"
.PD 0
.IP \-\-no\-notify\-email\-from 4
.IX Item "--no-notify-email-from"
.PD
If any email is sent, this is who it will be from
.IP \-\-notify\-email\-owner 4
.IX Item "--notify-email-owner"
.PD 0
.IP \-\-no\-notify\-email\-owner 4
.IX Item "--no-notify-email-owner"
.PD
Email the owner of broken tests files upon failure. Add `# HARNESS-META-OWNER foo@example.com` to the top of a test file to give it an owner
.IP \-\-notify\-no\-batch\-email 4
.IX Item "--notify-no-batch-email"
.PD 0
.IP \-\-no\-notify\-no\-batch\-email 4
.IX Item "--no-notify-no-batch-email"
.PD
Usually owner failures are sent as a single batch at the end of testing. Toggle this to send failures as they happen.
.IP \-\-notify\-no\-batch\-slack 4
.IX Item "--notify-no-batch-slack"
.PD 0
.IP \-\-no\-notify\-no\-batch\-slack 4
.IX Item "--no-notify-no-batch-slack"
.PD
Usually owner failures are sent as a single batch at the end of testing. Toggle this to send failures as they happen.
.IP "\-\-notify\-slack '#foo'" 4
.IX Item "--notify-slack '#foo'"
.PD 0
.IP "\-\-notify\-slack '@bar'" 4
.IX Item "--notify-slack '@bar'"
.IP \-\-no\-notify\-slack 4
.IX Item "--no-notify-slack"
.PD
Send results to a slack channel and/or user
.Sp
Can be specified multiple times
.IP "\-\-notify\-slack\-fail '#foo'" 4
.IX Item "--notify-slack-fail '#foo'"
.PD 0
.IP "\-\-notify\-slack\-fail '@bar'" 4
.IX Item "--notify-slack-fail '@bar'"
.IP \-\-no\-notify\-slack\-fail 4
.IX Item "--no-notify-slack-fail"
.PD
Send failing results to a slack channel and/or user
.Sp
Can be specified multiple times
.IP \-\-notify\-slack\-owner 4
.IX Item "--notify-slack-owner"
.PD 0
.IP \-\-no\-notify\-slack\-owner 4
.IX Item "--no-notify-slack-owner"
.PD
Send slack notifications to the slack channels/users listed in test meta-data when tests fail.
.IP "\-\-notify\-slack\-url https://hooks.slack.com/..." 4
.IX Item "--notify-slack-url https://hooks.slack.com/..."
.PD 0
.IP \-\-no\-notify\-slack\-url 4
.IX Item "--no-notify-slack-url"
.PD
Specify an API endpoint for slack webhook integrations
.IP "\-\-notify\-text ARG" 4
.IX Item "--notify-text ARG"
.PD 0
.IP \-\-notify\-text=ARG 4
.IX Item "--notify-text=ARG"
.IP "\-\-message ARG" 4
.IX Item "--message ARG"
.IP \-\-message=ARG 4
.IX Item "--message=ARG"
.IP "\-\-msg ARG" 4
.IX Item "--msg ARG"
.IP \-\-msg=ARG 4
.IX Item "--msg=ARG"
.IP \-\-no\-notify\-text 4
.IX Item "--no-notify-text"
.PD
Add a custom text snippet to email/slack notifications
.IP "\-\-notify\-text\-module ARG" 4
.IX Item "--notify-text-module ARG"
.PD 0
.IP \-\-notify\-text\-module=ARG 4
.IX Item "--notify-text-module=ARG"
.IP "\-\-message_module ARG" 4
.IX Item "--message_module ARG"
.IP \-\-message_module=ARG 4
.IX Item "--message_module=ARG"
.IP \-\-no\-notify\-text\-module 4
.IX Item "--no-notify-text-module"
.PD
Use the specified module to generate messages for emails and/or slack.
.PP
\fIRun Options\fR
.IX Subsection "Run Options"
.IP \-\-author\-testing 4
.IX Item "--author-testing"
.PD 0
.IP \-A 4
.IX Item "-A"
.IP \-\-no\-author\-testing 4
.IX Item "--no-author-testing"
.PD
This will set the AUTHOR_TESTING environment to true
.IP \-\-dbi\-profiling 4
.IX Item "--dbi-profiling"
.PD 0
.IP \-\-no\-dbi\-profiling 4
.IX Item "--no-dbi-profiling"
.PD
Use Test2::Plugin::DBIProfile to collect database profiling data
.IP "\-\-env\-var VAR=VAL" 4
.IX Item "--env-var VAR=VAL"
.PD 0
.IP \-EVAR=VAL 4
.IX Item "-EVAR=VAL"
.IP "\-E VAR=VAL" 4
.IX Item "-E VAR=VAL"
.IP \-\-no\-env\-var 4
.IX Item "--no-env-var"
.PD
Set environment variables to set when each test is run.
.Sp
Can be specified multiple times
.IP \-\-event\-uuids 4
.IX Item "--event-uuids"
.PD 0
.IP \-\-uuids 4
.IX Item "--uuids"
.IP \-\-no\-event\-uuids 4
.IX Item "--no-event-uuids"
.PD
Use Test2::Plugin::UUID inside tests (default: on)
.IP "\-\-fields name:details" 4
.IX Item "--fields name:details"
.PD 0
.IP "\-\-fields JSON_STRING" 4
.IX Item "--fields JSON_STRING"
.IP "\-f name:details" 4
.IX Item "-f name:details"
.IP "\-f JSON_STRING" 4
.IX Item "-f JSON_STRING"
.IP \-\-no\-fields 4
.IX Item "--no-fields"
.PD
Add custom data to the harness run
.Sp
Can be specified multiple times
.IP "\-\-input ARG" 4
.IX Item "--input ARG"
.PD 0
.IP \-\-input=ARG 4
.IX Item "--input=ARG"
.IP \-\-no\-input 4
.IX Item "--no-input"
.PD
Input string to be used as standard input for ALL tests. See also: \-\-input\-file
.IP "\-\-input\-file ARG" 4
.IX Item "--input-file ARG"
.PD 0
.IP \-\-input\-file=ARG 4
.IX Item "--input-file=ARG"
.IP \-\-no\-input\-file 4
.IX Item "--no-input-file"
.PD
Use the specified file as standard input to ALL tests
.IP \-\-io\-events 4
.IX Item "--io-events"
.PD 0
.IP \-\-no\-io\-events 4
.IX Item "--no-io-events"
.PD
Use Test2::Plugin::IOEvents inside tests to turn all prints into test2 events (default: off)
.IP "\-\-link 'https://travis.work/builds/42'" 4
.IX Item "--link 'https://travis.work/builds/42'"
.PD 0
.IP "\-\-link 'https://jenkins.work/job/42'" 4
.IX Item "--link 'https://jenkins.work/job/42'"
.IP "\-\-link 'https://buildbot.work/builders/foo/builds/42'" 4
.IX Item "--link 'https://buildbot.work/builders/foo/builds/42'"
.IP \-\-no\-link 4
.IX Item "--no-link"
.PD
Provide one or more links people can follow to see more about this run.
.Sp
Can be specified multiple times
.IP "\-\-load ARG" 4
.IX Item "--load ARG"
.PD 0
.IP \-\-load=ARG 4
.IX Item "--load=ARG"
.IP "\-\-load\-module ARG" 4
.IX Item "--load-module ARG"
.IP \-\-load\-module=ARG 4
.IX Item "--load-module=ARG"
.IP "\-m ARG" 4
.IX Item "-m ARG"
.IP \-m=ARG 4
.IX Item "-m=ARG"
.IP \-\-no\-load 4
.IX Item "--no-load"
.PD
Load a module in each test (after fork). The "import" method is not called.
.Sp
Can be specified multiple times
.IP "\-\-load\-import Module" 4
.IX Item "--load-import Module"
.PD 0
.IP "\-\-load\-import Module=import_arg1,arg2,..." 4
.IX Item "--load-import Module=import_arg1,arg2,..."
.IP "\-\-loadim Module" 4
.IX Item "--loadim Module"
.IP "\-\-loadim Module=import_arg1,arg2,..." 4
.IX Item "--loadim Module=import_arg1,arg2,..."
.IP "\-M Module" 4
.IX Item "-M Module"
.IP "\-M Module=import_arg1,arg2,..." 4
.IX Item "-M Module=import_arg1,arg2,..."
.IP \-\-no\-load\-import 4
.IX Item "--no-load-import"
.PD
Load a module in each test (after fork). Import is called.
.Sp
Can be specified multiple times. If the same key is listed multiple times the value lists will be appended together.
.IP \-\-mem\-usage 4
.IX Item "--mem-usage"
.PD 0
.IP \-\-no\-mem\-usage 4
.IX Item "--no-mem-usage"
.PD
Use Test2::Plugin::MemUsage inside tests (default: on)
.IP "\-\-retry ARG" 4
.IX Item "--retry ARG"
.PD 0
.IP \-\-retry=ARG 4
.IX Item "--retry=ARG"
.IP "\-r ARG" 4
.IX Item "-r ARG"
.IP \-r=ARG 4
.IX Item "-r=ARG"
.IP \-\-no\-retry 4
.IX Item "--no-retry"
.PD
Run any jobs that failed a second time. NOTE: \-\-retry=1 means failing tests will be attempted twice!
.IP \-\-retry\-isolated 4
.IX Item "--retry-isolated"
.PD 0
.IP \-\-retry\-iso 4
.IX Item "--retry-iso"
.IP \-\-no\-retry\-isolated 4
.IX Item "--no-retry-isolated"
.PD
If true then any job retries will be done in isolation (as though \-j1 was set)
.IP \-\-run\-id 4
.IX Item "--run-id"
.PD 0
.IP \-\-id 4
.IX Item "--id"
.IP \-\-no\-run\-id 4
.IX Item "--no-run-id"
.PD
Set a specific run-id. (Default: a UUID)
.IP "\-\-test\-args ARG" 4
.IX Item "--test-args ARG"
.PD 0
.IP \-\-test\-args=ARG 4
.IX Item "--test-args=ARG"
.IP \-\-no\-test\-args 4
.IX Item "--no-test-args"
.PD
Arguments to pass in as \f(CW@ARGV\fR for all tests that are run. These can be provided easier using the '::' argument separator.
.Sp
Can be specified multiple times
.IP \-\-stream 4
.IX Item "--stream"
.PD 0
.IP \-\-no\-stream 4
.IX Item "--no-stream"
.PD
Use the stream formatter (default is on)
.IP \-\-tap 4
.IX Item "--tap"
.PD 0
.IP \-\-TAP 4
.IX Item "--TAP"
.IP \-\-\-\-no\-stream 4
.IX Item "----no-stream"
.IP \-\-no\-tap 4
.IX Item "--no-tap"
.PD
The TAP format is lossy and clunky. Test2::Harness normally uses a newer streaming format to receive test results. There are old/legacy tests where this causes problems, in which case setting \-\-TAP or \-\-no\-stream can help.
.PP
\fIYathUI Options\fR
.IX Subsection "YathUI Options"
.IP "\-\-yathui\-api\-key ARG" 4
.IX Item "--yathui-api-key ARG"
.PD 0
.IP \-\-yathui\-api\-key=ARG 4
.IX Item "--yathui-api-key=ARG"
.IP \-\-no\-yathui\-api\-key 4
.IX Item "--no-yathui-api-key"
.PD
Yath-UI API key. This is not necessary if your Yath-UI instance is set to single-user
.IP \-\-yathui\-coverage 4
.IX Item "--yathui-coverage"
.PD 0
.IP \-\-no\-yathui\-coverage 4
.IX Item "--no-yathui-coverage"
.PD
Poll coverage data from Yath-UI to determine what tests should be run for changed files
.IP \-\-yathui\-db 4
.IX Item "--yathui-db"
.PD 0
.IP \-\-no\-yathui\-db 4
.IX Item "--no-yathui-db"
.PD
Add the YathUI DB renderer in addition to other renderers
.IP \-\-yathui\-durations 4
.IX Item "--yathui-durations"
.PD 0
.IP \-\-no\-yathui\-durations 4
.IX Item "--no-yathui-durations"
.PD
Poll duration data from Yath-UI to help order tests efficiently
.IP \-\-yathui\-grace 4
.IX Item "--yathui-grace"
.PD 0
.IP \-\-no\-yathui\-grace 4
.IX Item "--no-yathui-grace"
.PD
If yath cannot connect to yath-ui it normally throws an error, use this to make it fail gracefully. You get a warning, but things keep going.
.IP "\-\-yathui\-long\-duration 10" 4
.IX Item "--yathui-long-duration 10"
.PD 0
.IP \-\-no\-yathui\-long\-duration 4
.IX Item "--no-yathui-long-duration"
.PD
Minimum duration length (seconds) before a test goes from MEDIUM to LONG
.IP "\-\-yathui\-medium\-duration 5" 4
.IX Item "--yathui-medium-duration 5"
.PD 0
.IP \-\-no\-yathui\-medium\-duration 4
.IX Item "--no-yathui-medium-duration"
.PD
Minimum duration length (seconds) before a test goes from SHORT to MEDIUM
.IP "\-\-yathui\-mode summary" 4
.IX Item "--yathui-mode summary"
.PD 0
.IP "\-\-yathui\-mode qvf" 4
.IX Item "--yathui-mode qvf"
.IP "\-\-yathui\-mode qvfd" 4
.IX Item "--yathui-mode qvfd"
.IP "\-\-yathui\-mode complete" 4
.IX Item "--yathui-mode complete"
.IP \-\-no\-yathui\-mode 4
.IX Item "--no-yathui-mode"
.PD
Set the upload mode (default 'qvfd')
.IP \-\-yathui\-only 4
.IX Item "--yathui-only"
.PD 0
.IP \-\-no\-yathui\-only 4
.IX Item "--no-yathui-only"
.PD
Only use the YathUI renderer
.IP \-\-yathui\-only\-db 4
.IX Item "--yathui-only-db"
.PD 0
.IP \-\-no\-yathui\-only\-db 4
.IX Item "--no-yathui-only-db"
.PD
Only use the YathUI DB renderer
.IP "\-\-yathui\-port 8080" 4
.IX Item "--yathui-port 8080"
.PD 0
.IP \-\-no\-yathui\-port 4
.IX Item "--no-yathui-port"
.PD
Port to use when running a local server
.IP "\-\-yathui\-port\-command get_port.sh" 4
.IX Item "--yathui-port-command get_port.sh"
.PD 0
.IP "\-\-yathui\-port\-command get_port.sh \-\-pid $$" 4
.IX Item "--yathui-port-command get_port.sh --pid $$"
.IP \-\-no\-yathui\-port\-command 4
.IX Item "--no-yathui-port-command"
.PD
Use a command to get a port number. "$$" will be replaced with the PID of the yath process
.IP "\-\-yathui\-project ARG" 4
.IX Item "--yathui-project ARG"
.PD 0
.IP \-\-yathui\-project=ARG 4
.IX Item "--yathui-project=ARG"
.IP \-\-no\-yathui\-project 4
.IX Item "--no-yathui-project"
.PD
The Yath-UI project for your test results
.IP \-\-yathui\-render 4
.IX Item "--yathui-render"
.PD 0
.IP \-\-no\-yathui\-render 4
.IX Item "--no-yathui-render"
.PD
Add the YathUI renderer in addition to other renderers
.IP \-\-yathui\-resources 4
.IX Item "--yathui-resources"
.PD 0
.IP \-\-yathui\-resources=5 4
.IX Item "--yathui-resources=5"
.IP \-\-no\-yathui\-resources 4
.IX Item "--no-yathui-resources"
.PD
Send resource info (for supported resources) to yathui at the specified interval in seconds (5 if not specified)
.IP \-\-yathui\-retry 4
.IX Item "--yathui-retry"
.PD 0
.IP \-\-no\-yathui\-retry 4
.IX Item "--no-yathui-retry"
.PD
How many times to try an operation before giving up
.Sp
Can be specified multiple times
.IP "\-\-yathui\-schema PostgreSQL" 4
.IX Item "--yathui-schema PostgreSQL"
.PD 0
.IP "\-\-yathui\-schema MySQL" 4
.IX Item "--yathui-schema MySQL"
.IP "\-\-yathui\-schema MySQL56" 4
.IX Item "--yathui-schema MySQL56"
.IP \-\-no\-yathui\-schema 4
.IX Item "--no-yathui-schema"
.PD
What type of DB/schema to use when using a temporary database
.IP \-\-yathui\-upload 4
.IX Item "--yathui-upload"
.PD 0
.IP \-\-no\-yathui\-upload 4
.IX Item "--no-yathui-upload"
.PD
Upload the log to Yath-UI
.IP "\-\-yathui\-url http://my\-yath\-ui.com/..." 4
.IX Item "--yathui-url http://my-yath-ui.com/..."
.PD 0
.IP "\-\-uri http://my\-yath\-ui.com/..." 4
.IX Item "--uri http://my-yath-ui.com/..."
.IP \-\-no\-yathui\-url 4
.IX Item "--no-yathui-url"
.PD
Yath-UI url
.IP "\-\-yathui\-user ARG" 4
.IX Item "--yathui-user ARG"
.PD 0
.IP \-\-yathui\-user=ARG 4
.IX Item "--yathui-user=ARG"
.IP \-\-no\-yathui\-user 4
.IX Item "--no-yathui-user"
.PD
Username to attach to the data sent to the db
.IP "\-\-yathui\-db\-buffering none" 4
.IX Item "--yathui-db-buffering none"
.PD 0
.IP "\-\-yathui\-db\-buffering job" 4
.IX Item "--yathui-db-buffering job"
.IP "\-\-yathui\-db\-buffering diag" 4
.IX Item "--yathui-db-buffering diag"
.IP "\-\-yathui\-db\-buffering run" 4
.IX Item "--yathui-db-buffering run"
.IP \-\-no\-yathui\-db\-buffering 4
.IX Item "--no-yathui-db-buffering"
.PD
Type of buffering to use, if "none" then events are written to the db one at a time, which is SLOW
.IP "\-\-yathui\-db\-config ARG" 4
.IX Item "--yathui-db-config ARG"
.PD 0
.IP \-\-yathui\-db\-config=ARG 4
.IX Item "--yathui-db-config=ARG"
.IP \-\-no\-yathui\-db\-config 4
.IX Item "--no-yathui-db-config"
.PD
Module that implements 'MODULE\->yath_ui_config(%params)' which should return a Test2::Harness::UI::Config instance.
.IP \-\-yathui\-db\-coverage 4
.IX Item "--yathui-db-coverage"
.PD 0
.IP \-\-no\-yathui\-db\-coverage 4
.IX Item "--no-yathui-db-coverage"
.PD
Pull coverage data directly from the database (default: off)
.IP "\-\-yathui\-db\-driver Pg" 4
.IX Item "--yathui-db-driver Pg"
.PD 0
.IP \-\-yathui\-db\-drivermysql 4
.IX Item "--yathui-db-drivermysql"
.IP \-\-yathui\-db\-driverMariaDB 4
.IX Item "--yathui-db-driverMariaDB"
.IP \-\-no\-yathui\-db\-driver 4
.IX Item "--no-yathui-db-driver"
.PD
DBI Driver to use
.IP "\-\-yathui\-db\-dsn ARG" 4
.IX Item "--yathui-db-dsn ARG"
.PD 0
.IP \-\-yathui\-db\-dsn=ARG 4
.IX Item "--yathui-db-dsn=ARG"
.IP \-\-no\-yathui\-db\-dsn 4
.IX Item "--no-yathui-db-dsn"
.PD
DSN to use when connecting to the db
.IP "\-\-yathui\-db\-duration\-limit ARG" 4
.IX Item "--yathui-db-duration-limit ARG"
.PD 0
.IP \-\-yathui\-db\-duration\-limit=ARG 4
.IX Item "--yathui-db-duration-limit=ARG"
.IP \-\-no\-yathui\-db\-duration\-limit 4
.IX Item "--no-yathui-db-duration-limit"
.PD
Limit the number of runs to look at for durations data (default: 10)
.IP \-\-yathui\-db\-durations 4
.IX Item "--yathui-db-durations"
.PD 0
.IP \-\-no\-yathui\-db\-durations 4
.IX Item "--no-yathui-db-durations"
.PD
Pull duration data directly from the database (default: off)
.IP "\-\-yathui\-db\-flush\-interval 2" 4
.IX Item "--yathui-db-flush-interval 2"
.PD 0
.IP "\-\-yathui\-db\-flush\-interval 1.5" 4
.IX Item "--yathui-db-flush-interval 1.5"
.IP \-\-no\-yathui\-db\-flush\-interval 4
.IX Item "--no-yathui-db-flush-interval"
.PD
When buffering DB writes, force a flush when an event is recieved at least N seconds after the last flush.
.IP "\-\-yathui\-db\-host ARG" 4
.IX Item "--yathui-db-host ARG"
.PD 0
.IP \-\-yathui\-db\-host=ARG 4
.IX Item "--yathui-db-host=ARG"
.IP \-\-no\-yathui\-db\-host 4
.IX Item "--no-yathui-db-host"
.PD
hostname to use when connecting to the db
.IP "\-\-yathui\-db\-name ARG" 4
.IX Item "--yathui-db-name ARG"
.PD 0
.IP \-\-yathui\-db\-name=ARG 4
.IX Item "--yathui-db-name=ARG"
.IP \-\-no\-yathui\-db\-name 4
.IX Item "--no-yathui-db-name"
.PD
Name of the database to use for yathui
.IP "\-\-yathui\-db\-pass ARG" 4
.IX Item "--yathui-db-pass ARG"
.PD 0
.IP \-\-yathui\-db\-pass=ARG 4
.IX Item "--yathui-db-pass=ARG"
.IP \-\-no\-yathui\-db\-pass 4
.IX Item "--no-yathui-db-pass"
.PD
Password to use when connecting to the db
.IP "\-\-yathui\-db\-port ARG" 4
.IX Item "--yathui-db-port ARG"
.PD 0
.IP \-\-yathui\-db\-port=ARG 4
.IX Item "--yathui-db-port=ARG"
.IP \-\-no\-yathui\-db\-port 4
.IX Item "--no-yathui-db-port"
.PD
port to use when connecting to the db
.IP "\-\-yathui\-db\-publisher ARG" 4
.IX Item "--yathui-db-publisher ARG"
.PD 0
.IP \-\-yathui\-db\-publisher=ARG 4
.IX Item "--yathui-db-publisher=ARG"
.IP \-\-no\-yathui\-db\-publisher 4
.IX Item "--no-yathui-db-publisher"
.PD
When using coverage or duration data, only use data uploaded by this user
.IP "\-\-yathui\-db\-socket ARG" 4
.IX Item "--yathui-db-socket ARG"
.PD 0
.IP \-\-yathui\-db\-socket=ARG 4
.IX Item "--yathui-db-socket=ARG"
.IP \-\-no\-yathui\-db\-socket 4
.IX Item "--no-yathui-db-socket"
.PD
socket to use when connecting to the db
.IP "\-\-yathui\-db\-user ARG" 4
.IX Item "--yathui-db-user ARG"
.PD 0
.IP \-\-yathui\-db\-user=ARG 4
.IX Item "--yathui-db-user=ARG"
.IP \-\-no\-yathui\-db\-user 4
.IX Item "--no-yathui-db-user"
.PD
Username to use when connecting to the db
.PP
\fINO CATEGORY \- FIX ME\fR
.IX Subsection "NO CATEGORY - FIX ME"
.IP \-\-check\-reload\-state 4
.IX Item "--check-reload-state"
.PD 0
.IP \-\-no\-check\-reload\-state 4
.IX Item "--no-check-reload-state"
.PD
Abort the run if there are unfixes reload errors and show a confirmation dialogue for unfixed reload warnings.
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH MAINTAINERS
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH AUTHORS
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2023 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
