.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Yath::Plugin::Git 3"
.TH App::Yath::Plugin::Git 3 2023-10-03 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Yath::Plugin::Git \- Plugin to attach git data to a test run.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This plugin will attach git data to your test logs if any is available.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    $ yath test \-pGit ...
.Ve
.SH "READING THE DATA"
.IX Header "READING THE DATA"
The data is attached to the 'run' entry in the log file. This can be seen
directly in the json data. The data is also easily accessible with
Test2::Harness::UI.
.PP
The data will include the long sha, short sha, branch name, and a brief status.
.SH "PROVIDED OPTIONS"
.IX Header "PROVIDED OPTIONS"
.SS "COMMAND OPTIONS"
.IX Subsection "COMMAND OPTIONS"
\fIGit Options\fR
.IX Subsection "Git Options"
.IP "\-\-git\-change\-base master" 4
.IX Item "--git-change-base master"
.PD 0
.IP "\-\-git\-change\-base HEAD^" 4
.IX Item "--git-change-base HEAD^"
.IP "\-\-git\-change\-base df22abe4" 4
.IX Item "--git-change-base df22abe4"
.IP \-\-no\-git\-change\-base 4
.IX Item "--no-git-change-base"
.PD
Find files changed by all commits in the current branch from most recent stopping when a commit is found that is also present in the history of the branch/commit specified as the change base.
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH MAINTAINERS
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH AUTHORS
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
