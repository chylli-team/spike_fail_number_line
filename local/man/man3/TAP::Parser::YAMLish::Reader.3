.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "TAP::Parser::YAMLish::Reader 3"
.TH TAP::Parser::YAMLish::Reader 3 2023-10-02 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
TAP::Parser::YAMLish::Reader \- Read YAMLish data from iterator
.SH VERSION
.IX Header "VERSION"
Version 3.48
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Note that parts of this code were derived from YAML::Tiny with the
permission of Adam Kennedy.
.SH METHODS
.IX Header "METHODS"
.SS "Class Methods"
.IX Subsection "Class Methods"
\fR\f(CI\*(C`new\*(C'\fR\fI\fR
.IX Subsection "new"
.PP
The constructor \f(CW\*(C`new\*(C'\fR creates and returns an empty
\&\f(CW\*(C`TAP::Parser::YAMLish::Reader\*(C'\fR object.
.PP
.Vb 1
\& my $reader = TAP::Parser::YAMLish::Reader\->new;
.Ve
.SS "Instance Methods"
.IX Subsection "Instance Methods"
\fR\f(CI\*(C`read\*(C'\fR\fI\fR
.IX Subsection "read"
.PP
.Vb 1
\& my $got = $reader\->read($iterator);
.Ve
.PP
Read YAMLish from a TAP::Parser::Iterator and return the data structure it
represents.
.PP
\fR\f(CI\*(C`get_raw\*(C'\fR\fI\fR
.IX Subsection "get_raw"
.PP
.Vb 1
\& my $source = $reader\->get_source;
.Ve
.PP
Return the raw YAMLish source from the most recent \f(CW\*(C`read\*(C'\fR.
.SH AUTHOR
.IX Header "AUTHOR"
Andy Armstrong, <andy@hexten.net>
.PP
Adam Kennedy wrote YAML::Tiny which provided the template and many of
the YAML matching regular expressions for this module.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
YAML::Tiny, YAML, YAML::Syck, Config::Tiny, CSS::Tiny,
<http://use.perl.org/~Alias/journal/29427>
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2007\-2011 Andy Armstrong.
.PP
Portions copyright 2006\-2008 Adam Kennedy.
.PP
This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
.PP
The full text of the license can be found in the
LICENSE file included with this module.
