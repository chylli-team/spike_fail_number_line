.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Yath::Options::Logging 3"
.TH App::Yath::Options::Logging 3 2023-10-03 "perl v5.38.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Yath::Options::Logging \- Logging options for yath
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This is where the command line options for logging are defined.
.SH "PROVIDED OPTIONS"
.IX Header "PROVIDED OPTIONS"
.SS "COMMAND OPTIONS"
.IX Subsection "COMMAND OPTIONS"
\fILogging Options\fR
.IX Subsection "Logging Options"
.IP \-\-bzip2 4
.IX Item "--bzip2"
.PD 0
.IP \-\-bz2 4
.IX Item "--bz2"
.IP \-\-bzip2_log 4
.IX Item "--bzip2_log"
.IP \-B 4
.IX Item "-B"
.IP \-\-no\-bzip2 4
.IX Item "--no-bzip2"
.PD
Use bzip2 compression when writing the log. This option implies \-L. The .bz2 prefix is added to log file name for you
.IP \-\-gzip 4
.IX Item "--gzip"
.PD 0
.IP \-\-gz 4
.IX Item "--gz"
.IP \-\-gzip_log 4
.IX Item "--gzip_log"
.IP \-G 4
.IX Item "-G"
.IP \-\-no\-gzip 4
.IX Item "--no-gzip"
.PD
Use gzip compression when writing the log. This option implies \-L. The .gz prefix is added to log file name for you
.IP \-\-log 4
.IX Item "--log"
.PD 0
.IP \-L 4
.IX Item "-L"
.IP \-\-no\-log 4
.IX Item "--no-log"
.PD
Turn on logging
.IP "\-\-log\-dir ARG" 4
.IX Item "--log-dir ARG"
.PD 0
.IP \-\-log\-dir=ARG 4
.IX Item "--log-dir=ARG"
.IP \-\-no\-log\-dir 4
.IX Item "--no-log-dir"
.PD
Specify a log directory. Will fall back to the system temp dir.
.IP "\-\-log\-file ARG" 4
.IX Item "--log-file ARG"
.PD 0
.IP \-\-log\-file=ARG 4
.IX Item "--log-file=ARG"
.IP "\-F ARG" 4
.IX Item "-F ARG"
.IP \-F=ARG 4
.IX Item "-F=ARG"
.IP \-\-no\-log\-file 4
.IX Item "--no-log-file"
.PD
Specify the name of the log file. This option implies \-L.
.IP "\-\-log\-file\-format ARG" 4
.IX Item "--log-file-format ARG"
.PD 0
.IP \-\-log\-file\-format=ARG 4
.IX Item "--log-file-format=ARG"
.IP "\-\-lff ARG" 4
.IX Item "--lff ARG"
.IP \-\-lff=ARG 4
.IX Item "--lff=ARG"
.IP \-\-no\-log\-file\-format 4
.IX Item "--no-log-file-format"
.PD
Specify the format for automatically-generated log files. Overridden by \-\-log\-file, if given. This option implies \-L (Default: \e$YATH_LOG_FILE_FORMAT, if that is set, or else "%!P%Y\-%m\-%d~%H:%M:%S~%!U~%!p.jsonl"). This is a string in which percent-escape sequences will be replaced as per POSIX::strftime. The following special escape sequences are also replaced: (%!P : Project name followed by a ~, if a project is defined, otherwise empty string) (%!U : the unique test run ID) (%!p : the process ID) (%!S : the number of seconds since local midnight UTC)
.Sp
Can also be set with the following environment variables: \f(CW\*(C`YATH_LOG_FILE_FORMAT\*(C'\fR, \f(CW\*(C`TEST2_HARNESS_LOG_FORMAT\*(C'\fR
.SH SOURCE
.IX Header "SOURCE"
The source code repository for Test2\-Harness can be found at
\&\fIhttp://github.com/Test\-More/Test2\-Harness/\fR.
.SH MAINTAINERS
.IX Header "MAINTAINERS"
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.SH AUTHORS
.IX Header "AUTHORS"
.PD 0
.IP "Chad Granum <exodist@cpan.org>" 4
.IX Item "Chad Granum <exodist@cpan.org>"
.PD
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright 2020 Chad Granum <exodist7@gmail.com>.
.PP
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.PP
See \fIhttp://dev.perl.org/licenses/\fR
